// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: storeapi/store_api.proto

package storeapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AggFunc int32

const (
	AggFunc_AGG_FUNC_COUNT    AggFunc = 0
	AggFunc_AGG_FUNC_SUM      AggFunc = 1
	AggFunc_AGG_FUNC_MIN      AggFunc = 2
	AggFunc_AGG_FUNC_MAX      AggFunc = 3
	AggFunc_AGG_FUNC_AVG      AggFunc = 4
	AggFunc_AGG_FUNC_QUANTILE AggFunc = 5
	AggFunc_AGG_FUNC_UNIQUE   AggFunc = 6
)

// Enum value maps for AggFunc.
var (
	AggFunc_name = map[int32]string{
		0: "AGG_FUNC_COUNT",
		1: "AGG_FUNC_SUM",
		2: "AGG_FUNC_MIN",
		3: "AGG_FUNC_MAX",
		4: "AGG_FUNC_AVG",
		5: "AGG_FUNC_QUANTILE",
		6: "AGG_FUNC_UNIQUE",
	}
	AggFunc_value = map[string]int32{
		"AGG_FUNC_COUNT":    0,
		"AGG_FUNC_SUM":      1,
		"AGG_FUNC_MIN":      2,
		"AGG_FUNC_MAX":      3,
		"AGG_FUNC_AVG":      4,
		"AGG_FUNC_QUANTILE": 5,
		"AGG_FUNC_UNIQUE":   6,
	}
)

func (x AggFunc) Enum() *AggFunc {
	p := new(AggFunc)
	*p = x
	return p
}

func (x AggFunc) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggFunc) Descriptor() protoreflect.EnumDescriptor {
	return file_storeapi_store_api_proto_enumTypes[0].Descriptor()
}

func (AggFunc) Type() protoreflect.EnumType {
	return &file_storeapi_store_api_proto_enumTypes[0]
}

func (x AggFunc) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggFunc.Descriptor instead.
func (AggFunc) EnumDescriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{0}
}

type Order int32

const (
	Order_ORDER_DESC Order = 0
	Order_ORDER_ASC  Order = 1
)

// Enum value maps for Order.
var (
	Order_name = map[int32]string{
		0: "ORDER_DESC",
		1: "ORDER_ASC",
	}
	Order_value = map[string]int32{
		"ORDER_DESC": 0,
		"ORDER_ASC":  1,
	}
)

func (x Order) Enum() *Order {
	p := new(Order)
	*p = x
	return p
}

func (x Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order) Descriptor() protoreflect.EnumDescriptor {
	return file_storeapi_store_api_proto_enumTypes[1].Descriptor()
}

func (Order) Type() protoreflect.EnumType {
	return &file_storeapi_store_api_proto_enumTypes[1]
}

func (x Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order.Descriptor instead.
func (Order) EnumDescriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{1}
}

type SearchErrorCode int32

const (
	SearchErrorCode_NO_ERROR                      SearchErrorCode = 0
	SearchErrorCode_INGESTOR_QUERY_WANTS_OLD_DATA SearchErrorCode = 1
	SearchErrorCode_TOO_MANY_UNIQ_VALUES          SearchErrorCode = 2
	SearchErrorCode_TOO_MANY_FRACTIONS_HIT        SearchErrorCode = 3
)

// Enum value maps for SearchErrorCode.
var (
	SearchErrorCode_name = map[int32]string{
		0: "NO_ERROR",
		1: "INGESTOR_QUERY_WANTS_OLD_DATA",
		2: "TOO_MANY_UNIQ_VALUES",
		3: "TOO_MANY_FRACTIONS_HIT",
	}
	SearchErrorCode_value = map[string]int32{
		"NO_ERROR":                      0,
		"INGESTOR_QUERY_WANTS_OLD_DATA": 1,
		"TOO_MANY_UNIQ_VALUES":          2,
		"TOO_MANY_FRACTIONS_HIT":        3,
	}
)

func (x SearchErrorCode) Enum() *SearchErrorCode {
	p := new(SearchErrorCode)
	*p = x
	return p
}

func (x SearchErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_storeapi_store_api_proto_enumTypes[2].Descriptor()
}

func (SearchErrorCode) Type() protoreflect.EnumType {
	return &file_storeapi_store_api_proto_enumTypes[2]
}

func (x SearchErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchErrorCode.Descriptor instead.
func (SearchErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{2}
}

type AsyncSearchStatus int32

const (
	AsyncSearchStatus_AsyncSearchStatusInProgress AsyncSearchStatus = 0
	AsyncSearchStatus_AsyncSearchStatusDone       AsyncSearchStatus = 1
	AsyncSearchStatus_AsyncSearchStatusCanceled   AsyncSearchStatus = 2
	AsyncSearchStatus_AsyncSearchStatusError      AsyncSearchStatus = 3
)

// Enum value maps for AsyncSearchStatus.
var (
	AsyncSearchStatus_name = map[int32]string{
		0: "AsyncSearchStatusInProgress",
		1: "AsyncSearchStatusDone",
		2: "AsyncSearchStatusCanceled",
		3: "AsyncSearchStatusError",
	}
	AsyncSearchStatus_value = map[string]int32{
		"AsyncSearchStatusInProgress": 0,
		"AsyncSearchStatusDone":       1,
		"AsyncSearchStatusCanceled":   2,
		"AsyncSearchStatusError":      3,
	}
)

func (x AsyncSearchStatus) Enum() *AsyncSearchStatus {
	p := new(AsyncSearchStatus)
	*p = x
	return p
}

func (x AsyncSearchStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AsyncSearchStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_storeapi_store_api_proto_enumTypes[3].Descriptor()
}

func (AsyncSearchStatus) Type() protoreflect.EnumType {
	return &file_storeapi_store_api_proto_enumTypes[3]
}

func (x AsyncSearchStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AsyncSearchStatus.Descriptor instead.
func (AsyncSearchStatus) EnumDescriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{3}
}

type BulkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Docs          []byte                 `protobuf:"bytes,2,opt,name=docs,proto3" json:"docs,omitempty"`
	Metas         []byte                 `protobuf:"bytes,3,opt,name=metas,proto3" json:"metas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRequest) Reset() {
	*x = BulkRequest{}
	mi := &file_storeapi_store_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRequest) ProtoMessage() {}

func (x *BulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRequest.ProtoReflect.Descriptor instead.
func (*BulkRequest) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{0}
}

func (x *BulkRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BulkRequest) GetDocs() []byte {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *BulkRequest) GetMetas() []byte {
	if x != nil {
		return x.Metas
	}
	return nil
}

type BinaryData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BinaryData) Reset() {
	*x = BinaryData{}
	mi := &file_storeapi_store_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BinaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryData) ProtoMessage() {}

func (x *BinaryData) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryData.ProtoReflect.Descriptor instead.
func (*BinaryData) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{1}
}

func (x *BinaryData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AggQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	GroupBy       string                 `protobuf:"bytes,3,opt,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Func          AggFunc                `protobuf:"varint,4,opt,name=func,proto3,enum=api.AggFunc" json:"func,omitempty"`
	Quantiles     []float64              `protobuf:"fixed64,5,rep,packed,name=quantiles,proto3" json:"quantiles,omitempty"`
	Interval      int64                  `protobuf:"varint,6,opt,name=interval,proto3" json:"interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggQuery) Reset() {
	*x = AggQuery{}
	mi := &file_storeapi_store_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggQuery) ProtoMessage() {}

func (x *AggQuery) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggQuery.ProtoReflect.Descriptor instead.
func (*AggQuery) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{2}
}

func (x *AggQuery) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *AggQuery) GetGroupBy() string {
	if x != nil {
		return x.GroupBy
	}
	return ""
}

func (x *AggQuery) GetFunc() AggFunc {
	if x != nil {
		return x.Func
	}
	return AggFunc_AGG_FUNC_COUNT
}

func (x *AggQuery) GetQuantiles() []float64 {
	if x != nil {
		return x.Quantiles
	}
	return nil
}

func (x *AggQuery) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type SearchRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Query    string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	From     int64                  `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	To       int64                  `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
	Size     int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Offset   int64                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Interval int64                  `protobuf:"varint,6,opt,name=interval,proto3" json:"interval,omitempty"`
	// Deprecated: Marked as deprecated in storeapi/store_api.proto.
	Aggregation string `protobuf:"bytes,7,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	Explain     bool   `protobuf:"varint,8,opt,name=explain,proto3" json:"explain,omitempty"`
	WithTotal   bool   `protobuf:"varint,10,opt,name=with_total,json=withTotal,proto3" json:"with_total,omitempty"`
	// Deprecated: Marked as deprecated in storeapi/store_api.proto.
	AggregationFilter string      `protobuf:"bytes,11,opt,name=aggregation_filter,json=aggregationFilter,proto3" json:"aggregation_filter,omitempty"`
	Aggs              []*AggQuery `protobuf:"bytes,12,rep,name=aggs,proto3" json:"aggs,omitempty"`
	Order             Order       `protobuf:"varint,13,opt,name=order,proto3,enum=api.Order" json:"order,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_storeapi_store_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{3}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SearchRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *SearchRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchRequest) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

// Deprecated: Marked as deprecated in storeapi/store_api.proto.
func (x *SearchRequest) GetAggregation() string {
	if x != nil {
		return x.Aggregation
	}
	return ""
}

func (x *SearchRequest) GetExplain() bool {
	if x != nil {
		return x.Explain
	}
	return false
}

func (x *SearchRequest) GetWithTotal() bool {
	if x != nil {
		return x.WithTotal
	}
	return false
}

// Deprecated: Marked as deprecated in storeapi/store_api.proto.
func (x *SearchRequest) GetAggregationFilter() string {
	if x != nil {
		return x.AggregationFilter
	}
	return ""
}

func (x *SearchRequest) GetAggs() []*AggQuery {
	if x != nil {
		return x.Aggs
	}
	return nil
}

func (x *SearchRequest) GetOrder() Order {
	if x != nil {
		return x.Order
	}
	return Order_ORDER_DESC
}

type SearchResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in storeapi/store_api.proto.
	Data          []byte                       `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	IdSources     []*SearchResponse_IdWithHint `protobuf:"bytes,2,rep,name=id_sources,json=idSources,proto3" json:"id_sources,omitempty"`
	Histogram     map[uint64]uint64            `protobuf:"bytes,3,rep,name=histogram,proto3" json:"histogram,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Aggs          []*SearchResponse_Agg        `protobuf:"bytes,4,rep,name=aggs,proto3" json:"aggs,omitempty"`
	Total         uint64                       `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Errors        []string                     `protobuf:"bytes,6,rep,name=errors,proto3" json:"errors,omitempty"`
	Code          SearchErrorCode              `protobuf:"varint,7,opt,name=code,proto3,enum=api.SearchErrorCode" json:"code,omitempty"`
	Explain       *ExplainEntry                `protobuf:"bytes,8,opt,name=explain,proto3,oneof" json:"explain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_storeapi_store_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{4}
}

// Deprecated: Marked as deprecated in storeapi/store_api.proto.
func (x *SearchResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchResponse) GetIdSources() []*SearchResponse_IdWithHint {
	if x != nil {
		return x.IdSources
	}
	return nil
}

func (x *SearchResponse) GetHistogram() map[uint64]uint64 {
	if x != nil {
		return x.Histogram
	}
	return nil
}

func (x *SearchResponse) GetAggs() []*SearchResponse_Agg {
	if x != nil {
		return x.Aggs
	}
	return nil
}

func (x *SearchResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *SearchResponse) GetCode() SearchErrorCode {
	if x != nil {
		return x.Code
	}
	return SearchErrorCode_NO_ERROR
}

func (x *SearchResponse) GetExplain() *ExplainEntry {
	if x != nil {
		return x.Explain
	}
	return nil
}

type ExplainEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Duration      *durationpb.Duration   `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Children      []*ExplainEntry        `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplainEntry) Reset() {
	*x = ExplainEntry{}
	mi := &file_storeapi_store_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplainEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplainEntry) ProtoMessage() {}

func (x *ExplainEntry) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplainEntry.ProtoReflect.Descriptor instead.
func (*ExplainEntry) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{5}
}

func (x *ExplainEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExplainEntry) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *ExplainEntry) GetChildren() []*ExplainEntry {
	if x != nil {
		return x.Children
	}
	return nil
}

type StartAsyncSearchRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SearchId          string                 `protobuf:"bytes,1,opt,name=search_id,json=searchId,proto3" json:"search_id,omitempty"`
	Retention         *durationpb.Duration   `protobuf:"bytes,2,opt,name=retention,proto3" json:"retention,omitempty"`
	Query             string                 `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	From              int64                  `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"`
	To                int64                  `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
	Aggs              []*AggQuery            `protobuf:"bytes,6,rep,name=aggs,proto3" json:"aggs,omitempty"`
	HistogramInterval int64                  `protobuf:"varint,7,opt,name=histogram_interval,json=histogramInterval,proto3" json:"histogram_interval,omitempty"`
	WithDocs          bool                   `protobuf:"varint,8,opt,name=with_docs,json=withDocs,proto3" json:"with_docs,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StartAsyncSearchRequest) Reset() {
	*x = StartAsyncSearchRequest{}
	mi := &file_storeapi_store_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartAsyncSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAsyncSearchRequest) ProtoMessage() {}

func (x *StartAsyncSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAsyncSearchRequest.ProtoReflect.Descriptor instead.
func (*StartAsyncSearchRequest) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{6}
}

func (x *StartAsyncSearchRequest) GetSearchId() string {
	if x != nil {
		return x.SearchId
	}
	return ""
}

func (x *StartAsyncSearchRequest) GetRetention() *durationpb.Duration {
	if x != nil {
		return x.Retention
	}
	return nil
}

func (x *StartAsyncSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StartAsyncSearchRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *StartAsyncSearchRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *StartAsyncSearchRequest) GetAggs() []*AggQuery {
	if x != nil {
		return x.Aggs
	}
	return nil
}

func (x *StartAsyncSearchRequest) GetHistogramInterval() int64 {
	if x != nil {
		return x.HistogramInterval
	}
	return 0
}

func (x *StartAsyncSearchRequest) GetWithDocs() bool {
	if x != nil {
		return x.WithDocs
	}
	return false
}

type StartAsyncSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartAsyncSearchResponse) Reset() {
	*x = StartAsyncSearchResponse{}
	mi := &file_storeapi_store_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartAsyncSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAsyncSearchResponse) ProtoMessage() {}

func (x *StartAsyncSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAsyncSearchResponse.ProtoReflect.Descriptor instead.
func (*StartAsyncSearchResponse) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{7}
}

type FetchAsyncSearchResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SearchId      string                 `protobuf:"bytes,1,opt,name=search_id,json=searchId,proto3" json:"search_id,omitempty"`
	Size          int32                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Order         Order                  `protobuf:"varint,4,opt,name=order,proto3,enum=api.Order" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchAsyncSearchResultRequest) Reset() {
	*x = FetchAsyncSearchResultRequest{}
	mi := &file_storeapi_store_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchAsyncSearchResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAsyncSearchResultRequest) ProtoMessage() {}

func (x *FetchAsyncSearchResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAsyncSearchResultRequest.ProtoReflect.Descriptor instead.
func (*FetchAsyncSearchResultRequest) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{8}
}

func (x *FetchAsyncSearchResultRequest) GetSearchId() string {
	if x != nil {
		return x.SearchId
	}
	return ""
}

func (x *FetchAsyncSearchResultRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FetchAsyncSearchResultRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FetchAsyncSearchResultRequest) GetOrder() Order {
	if x != nil {
		return x.Order
	}
	return Order_ORDER_DESC
}

type FetchAsyncSearchResultResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Status            AsyncSearchStatus      `protobuf:"varint,1,opt,name=status,proto3,enum=api.AsyncSearchStatus" json:"status,omitempty"`
	Response          *SearchResponse        `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	StartedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	ExpiresAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	CanceledAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=canceled_at,json=canceledAt,proto3,oneof" json:"canceled_at,omitempty"`
	FracsDone         uint64                 `protobuf:"varint,6,opt,name=fracs_done,json=fracsDone,proto3" json:"fracs_done,omitempty"`
	FracsQueue        uint64                 `protobuf:"varint,7,opt,name=fracs_queue,json=fracsQueue,proto3" json:"fracs_queue,omitempty"`
	DiskUsage         uint64                 `protobuf:"varint,8,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	Aggs              []*AggQuery            `protobuf:"bytes,9,rep,name=aggs,proto3" json:"aggs,omitempty"`
	HistogramInterval int64                  `protobuf:"varint,10,opt,name=histogram_interval,json=histogramInterval,proto3" json:"histogram_interval,omitempty"`
	Query             string                 `protobuf:"bytes,11,opt,name=query,proto3" json:"query,omitempty"`
	From              *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=from,proto3" json:"from,omitempty"`
	To                *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=to,proto3" json:"to,omitempty"`
	Retention         *durationpb.Duration   `protobuf:"bytes,14,opt,name=retention,proto3" json:"retention,omitempty"`
	WithDocs          bool                   `protobuf:"varint,15,opt,name=with_docs,json=withDocs,proto3" json:"with_docs,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *FetchAsyncSearchResultResponse) Reset() {
	*x = FetchAsyncSearchResultResponse{}
	mi := &file_storeapi_store_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchAsyncSearchResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAsyncSearchResultResponse) ProtoMessage() {}

func (x *FetchAsyncSearchResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAsyncSearchResultResponse.ProtoReflect.Descriptor instead.
func (*FetchAsyncSearchResultResponse) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{9}
}

func (x *FetchAsyncSearchResultResponse) GetStatus() AsyncSearchStatus {
	if x != nil {
		return x.Status
	}
	return AsyncSearchStatus_AsyncSearchStatusInProgress
}

func (x *FetchAsyncSearchResultResponse) GetResponse() *SearchResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *FetchAsyncSearchResultResponse) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *FetchAsyncSearchResultResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *FetchAsyncSearchResultResponse) GetCanceledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CanceledAt
	}
	return nil
}

func (x *FetchAsyncSearchResultResponse) GetFracsDone() uint64 {
	if x != nil {
		return x.FracsDone
	}
	return 0
}

func (x *FetchAsyncSearchResultResponse) GetFracsQueue() uint64 {
	if x != nil {
		return x.FracsQueue
	}
	return 0
}

func (x *FetchAsyncSearchResultResponse) GetDiskUsage() uint64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *FetchAsyncSearchResultResponse) GetAggs() []*AggQuery {
	if x != nil {
		return x.Aggs
	}
	return nil
}

func (x *FetchAsyncSearchResultResponse) GetHistogramInterval() int64 {
	if x != nil {
		return x.HistogramInterval
	}
	return 0
}

func (x *FetchAsyncSearchResultResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FetchAsyncSearchResultResponse) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *FetchAsyncSearchResultResponse) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *FetchAsyncSearchResultResponse) GetRetention() *durationpb.Duration {
	if x != nil {
		return x.Retention
	}
	return nil
}

func (x *FetchAsyncSearchResultResponse) GetWithDocs() bool {
	if x != nil {
		return x.WithDocs
	}
	return false
}

type CancelAsyncSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SearchId      string                 `protobuf:"bytes,1,opt,name=search_id,json=searchId,proto3" json:"search_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelAsyncSearchRequest) Reset() {
	*x = CancelAsyncSearchRequest{}
	mi := &file_storeapi_store_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelAsyncSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAsyncSearchRequest) ProtoMessage() {}

func (x *CancelAsyncSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAsyncSearchRequest.ProtoReflect.Descriptor instead.
func (*CancelAsyncSearchRequest) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{10}
}

func (x *CancelAsyncSearchRequest) GetSearchId() string {
	if x != nil {
		return x.SearchId
	}
	return ""
}

type CancelAsyncSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelAsyncSearchResponse) Reset() {
	*x = CancelAsyncSearchResponse{}
	mi := &file_storeapi_store_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelAsyncSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAsyncSearchResponse) ProtoMessage() {}

func (x *CancelAsyncSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAsyncSearchResponse.ProtoReflect.Descriptor instead.
func (*CancelAsyncSearchResponse) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{11}
}

type DeleteAsyncSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SearchId      string                 `protobuf:"bytes,1,opt,name=search_id,json=searchId,proto3" json:"search_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAsyncSearchRequest) Reset() {
	*x = DeleteAsyncSearchRequest{}
	mi := &file_storeapi_store_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAsyncSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAsyncSearchRequest) ProtoMessage() {}

func (x *DeleteAsyncSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAsyncSearchRequest.ProtoReflect.Descriptor instead.
func (*DeleteAsyncSearchRequest) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteAsyncSearchRequest) GetSearchId() string {
	if x != nil {
		return x.SearchId
	}
	return ""
}

type DeleteAsyncSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAsyncSearchResponse) Reset() {
	*x = DeleteAsyncSearchResponse{}
	mi := &file_storeapi_store_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAsyncSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAsyncSearchResponse) ProtoMessage() {}

func (x *DeleteAsyncSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAsyncSearchResponse.ProtoReflect.Descriptor instead.
func (*DeleteAsyncSearchResponse) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{13}
}

type GetAsyncSearchesListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *AsyncSearchStatus     `protobuf:"varint,1,opt,name=status,proto3,enum=api.AsyncSearchStatus,oneof" json:"status,omitempty"`
	Ids           []string               `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAsyncSearchesListRequest) Reset() {
	*x = GetAsyncSearchesListRequest{}
	mi := &file_storeapi_store_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAsyncSearchesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAsyncSearchesListRequest) ProtoMessage() {}

func (x *GetAsyncSearchesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAsyncSearchesListRequest.ProtoReflect.Descriptor instead.
func (*GetAsyncSearchesListRequest) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetAsyncSearchesListRequest) GetStatus() AsyncSearchStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return AsyncSearchStatus_AsyncSearchStatusInProgress
}

func (x *GetAsyncSearchesListRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetAsyncSearchesListResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Searches      []*AsyncSearchesListItem `protobuf:"bytes,1,rep,name=searches,proto3" json:"searches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAsyncSearchesListResponse) Reset() {
	*x = GetAsyncSearchesListResponse{}
	mi := &file_storeapi_store_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAsyncSearchesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAsyncSearchesListResponse) ProtoMessage() {}

func (x *GetAsyncSearchesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAsyncSearchesListResponse.ProtoReflect.Descriptor instead.
func (*GetAsyncSearchesListResponse) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{15}
}

func (x *GetAsyncSearchesListResponse) GetSearches() []*AsyncSearchesListItem {
	if x != nil {
		return x.Searches
	}
	return nil
}

type AsyncSearchesListItem struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SearchId          string                 `protobuf:"bytes,1,opt,name=search_id,json=searchId,proto3" json:"search_id,omitempty"`
	Status            AsyncSearchStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=api.AsyncSearchStatus" json:"status,omitempty"`
	StartedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	ExpiresAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	CanceledAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=canceled_at,json=canceledAt,proto3,oneof" json:"canceled_at,omitempty"`
	FracsDone         uint64                 `protobuf:"varint,6,opt,name=fracs_done,json=fracsDone,proto3" json:"fracs_done,omitempty"`
	FracsQueue        uint64                 `protobuf:"varint,7,opt,name=fracs_queue,json=fracsQueue,proto3" json:"fracs_queue,omitempty"`
	DiskUsage         uint64                 `protobuf:"varint,8,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	Aggs              []*AggQuery            `protobuf:"bytes,9,rep,name=aggs,proto3" json:"aggs,omitempty"`
	HistogramInterval int64                  `protobuf:"varint,10,opt,name=histogram_interval,json=histogramInterval,proto3" json:"histogram_interval,omitempty"`
	Query             string                 `protobuf:"bytes,11,opt,name=query,proto3" json:"query,omitempty"`
	From              *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=from,proto3" json:"from,omitempty"`
	To                *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=to,proto3" json:"to,omitempty"`
	Retention         *durationpb.Duration   `protobuf:"bytes,14,opt,name=retention,proto3" json:"retention,omitempty"`
	WithDocs          bool                   `protobuf:"varint,15,opt,name=with_docs,json=withDocs,proto3" json:"with_docs,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AsyncSearchesListItem) Reset() {
	*x = AsyncSearchesListItem{}
	mi := &file_storeapi_store_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncSearchesListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncSearchesListItem) ProtoMessage() {}

func (x *AsyncSearchesListItem) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncSearchesListItem.ProtoReflect.Descriptor instead.
func (*AsyncSearchesListItem) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{16}
}

func (x *AsyncSearchesListItem) GetSearchId() string {
	if x != nil {
		return x.SearchId
	}
	return ""
}

func (x *AsyncSearchesListItem) GetStatus() AsyncSearchStatus {
	if x != nil {
		return x.Status
	}
	return AsyncSearchStatus_AsyncSearchStatusInProgress
}

func (x *AsyncSearchesListItem) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *AsyncSearchesListItem) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *AsyncSearchesListItem) GetCanceledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CanceledAt
	}
	return nil
}

func (x *AsyncSearchesListItem) GetFracsDone() uint64 {
	if x != nil {
		return x.FracsDone
	}
	return 0
}

func (x *AsyncSearchesListItem) GetFracsQueue() uint64 {
	if x != nil {
		return x.FracsQueue
	}
	return 0
}

func (x *AsyncSearchesListItem) GetDiskUsage() uint64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *AsyncSearchesListItem) GetAggs() []*AggQuery {
	if x != nil {
		return x.Aggs
	}
	return nil
}

func (x *AsyncSearchesListItem) GetHistogramInterval() int64 {
	if x != nil {
		return x.HistogramInterval
	}
	return 0
}

func (x *AsyncSearchesListItem) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *AsyncSearchesListItem) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *AsyncSearchesListItem) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *AsyncSearchesListItem) GetRetention() *durationpb.Duration {
	if x != nil {
		return x.Retention
	}
	return nil
}

func (x *AsyncSearchesListItem) GetWithDocs() bool {
	if x != nil {
		return x.WithDocs
	}
	return false
}

type IdWithHint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hint          string                 `protobuf:"bytes,2,opt,name=hint,proto3" json:"hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdWithHint) Reset() {
	*x = IdWithHint{}
	mi := &file_storeapi_store_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdWithHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdWithHint) ProtoMessage() {}

func (x *IdWithHint) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdWithHint.ProtoReflect.Descriptor instead.
func (*IdWithHint) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{17}
}

func (x *IdWithHint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IdWithHint) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

type FetchRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Ids           []string                   `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Explain       bool                       `protobuf:"varint,3,opt,name=explain,proto3" json:"explain,omitempty"`
	IdsWithHints  []*IdWithHint              `protobuf:"bytes,4,rep,name=ids_with_hints,json=idsWithHints,proto3" json:"ids_with_hints,omitempty"`
	FieldsFilter  *FetchRequest_FieldsFilter `protobuf:"bytes,5,opt,name=fields_filter,json=fieldsFilter,proto3" json:"fields_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRequest) Reset() {
	*x = FetchRequest{}
	mi := &file_storeapi_store_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRequest) ProtoMessage() {}

func (x *FetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRequest.ProtoReflect.Descriptor instead.
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{18}
}

func (x *FetchRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *FetchRequest) GetExplain() bool {
	if x != nil {
		return x.Explain
	}
	return false
}

func (x *FetchRequest) GetIdsWithHints() []*IdWithHint {
	if x != nil {
		return x.IdsWithHints
	}
	return nil
}

func (x *FetchRequest) GetFieldsFilter() *FetchRequest_FieldsFilter {
	if x != nil {
		return x.FieldsFilter
	}
	return nil
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_storeapi_store_api_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{19}
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OldestTime    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=oldest_time,json=oldestTime,proto3" json:"oldest_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_storeapi_store_api_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{20}
}

func (x *StatusResponse) GetOldestTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OldestTime
	}
	return nil
}

type SearchResponse_Id struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mid           uint64                 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Rid           uint64                 `protobuf:"varint,2,opt,name=rid,proto3" json:"rid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse_Id) Reset() {
	*x = SearchResponse_Id{}
	mi := &file_storeapi_store_api_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse_Id) ProtoMessage() {}

func (x *SearchResponse_Id) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse_Id.ProtoReflect.Descriptor instead.
func (*SearchResponse_Id) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{4, 0}
}

func (x *SearchResponse_Id) GetMid() uint64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *SearchResponse_Id) GetRid() uint64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

type SearchResponse_IdWithHint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *SearchResponse_Id     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hint          string                 `protobuf:"bytes,3,opt,name=hint,proto3" json:"hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse_IdWithHint) Reset() {
	*x = SearchResponse_IdWithHint{}
	mi := &file_storeapi_store_api_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse_IdWithHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse_IdWithHint) ProtoMessage() {}

func (x *SearchResponse_IdWithHint) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse_IdWithHint.ProtoReflect.Descriptor instead.
func (*SearchResponse_IdWithHint) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{4, 1}
}

func (x *SearchResponse_IdWithHint) GetId() *SearchResponse_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SearchResponse_IdWithHint) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

type SearchResponse_Histogram struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           float64                `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           float64                `protobuf:"fixed64,2,opt,name=max,proto3" json:"max,omitempty"`
	Sum           float64                `protobuf:"fixed64,3,opt,name=sum,proto3" json:"sum,omitempty"`
	Total         int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	NotExists     int64                  `protobuf:"varint,5,opt,name=not_exists,json=notExists,proto3" json:"not_exists,omitempty"`
	Samples       []float64              `protobuf:"fixed64,6,rep,packed,name=samples,proto3" json:"samples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse_Histogram) Reset() {
	*x = SearchResponse_Histogram{}
	mi := &file_storeapi_store_api_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse_Histogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse_Histogram) ProtoMessage() {}

func (x *SearchResponse_Histogram) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse_Histogram.ProtoReflect.Descriptor instead.
func (*SearchResponse_Histogram) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{4, 2}
}

func (x *SearchResponse_Histogram) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *SearchResponse_Histogram) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *SearchResponse_Histogram) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *SearchResponse_Histogram) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchResponse_Histogram) GetNotExists() int64 {
	if x != nil {
		return x.NotExists
	}
	return 0
}

func (x *SearchResponse_Histogram) GetSamples() []float64 {
	if x != nil {
		return x.Samples
	}
	return nil
}

type SearchResponse_Bin struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Label         string                    `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Ts            *timestamppb.Timestamp    `protobuf:"bytes,2,opt,name=ts,proto3" json:"ts,omitempty"`
	Hist          *SearchResponse_Histogram `protobuf:"bytes,3,opt,name=hist,proto3" json:"hist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse_Bin) Reset() {
	*x = SearchResponse_Bin{}
	mi := &file_storeapi_store_api_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse_Bin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse_Bin) ProtoMessage() {}

func (x *SearchResponse_Bin) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse_Bin.ProtoReflect.Descriptor instead.
func (*SearchResponse_Bin) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{4, 3}
}

func (x *SearchResponse_Bin) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *SearchResponse_Bin) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *SearchResponse_Bin) GetHist() *SearchResponse_Histogram {
	if x != nil {
		return x.Hist
	}
	return nil
}

type SearchResponse_Agg struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in storeapi/store_api.proto.
	Agg          map[string]uint64                    `protobuf:"bytes,1,rep,name=agg,proto3" json:"agg,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	AggHistogram map[string]*SearchResponse_Histogram `protobuf:"bytes,2,rep,name=agg_histogram,json=aggHistogram,proto3" json:"agg_histogram,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NotExists    int64                                `protobuf:"varint,3,opt,name=not_exists,json=notExists,proto3" json:"not_exists,omitempty"`
	// Timeseries will be presented as:
	// [
	//
	//	{ (foo, ts1) -> (val) },
	//	{ (bar, ts1) -> (val) },
	//	{ (foo, ts2) -> (val) }
	//
	// ]
	Timeseries    []*SearchResponse_Bin `protobuf:"bytes,4,rep,name=timeseries,proto3" json:"timeseries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse_Agg) Reset() {
	*x = SearchResponse_Agg{}
	mi := &file_storeapi_store_api_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse_Agg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse_Agg) ProtoMessage() {}

func (x *SearchResponse_Agg) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse_Agg.ProtoReflect.Descriptor instead.
func (*SearchResponse_Agg) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{4, 4}
}

// Deprecated: Marked as deprecated in storeapi/store_api.proto.
func (x *SearchResponse_Agg) GetAgg() map[string]uint64 {
	if x != nil {
		return x.Agg
	}
	return nil
}

func (x *SearchResponse_Agg) GetAggHistogram() map[string]*SearchResponse_Histogram {
	if x != nil {
		return x.AggHistogram
	}
	return nil
}

func (x *SearchResponse_Agg) GetNotExists() int64 {
	if x != nil {
		return x.NotExists
	}
	return 0
}

func (x *SearchResponse_Agg) GetTimeseries() []*SearchResponse_Bin {
	if x != nil {
		return x.Timeseries
	}
	return nil
}

type FetchRequest_FieldsFilter struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Fields []string               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// see seqproxyapi.FetchRequest.FieldsFilter.allow_list for details.
	AllowList     bool `protobuf:"varint,2,opt,name=allow_list,json=allowList,proto3" json:"allow_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRequest_FieldsFilter) Reset() {
	*x = FetchRequest_FieldsFilter{}
	mi := &file_storeapi_store_api_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRequest_FieldsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRequest_FieldsFilter) ProtoMessage() {}

func (x *FetchRequest_FieldsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_storeapi_store_api_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRequest_FieldsFilter.ProtoReflect.Descriptor instead.
func (*FetchRequest_FieldsFilter) Descriptor() ([]byte, []int) {
	return file_storeapi_store_api_proto_rawDescGZIP(), []int{18, 0}
}

func (x *FetchRequest_FieldsFilter) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *FetchRequest_FieldsFilter) GetAllowList() bool {
	if x != nil {
		return x.AllowList
	}
	return false
}

var File_storeapi_store_api_proto protoreflect.FileDescriptor

var file_storeapi_store_api_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a,
	0x0b, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x22, 0x20, 0x0a, 0x0a,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9d,
	0x01, 0x0a, 0x08, 0x41, 0x67, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x04,
	0x66, 0x75, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x67, 0x67, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x12, 0x1c,
	0x0a, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xe8,
	0x02, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x31, 0x0a, 0x12, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x67, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x67, 0x67, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x04, 0x61, 0x67, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xad, 0x09, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x02, 0x18, 0x01, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x69, 0x64, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x04, 0x61, 0x67, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x52, 0x04, 0x61, 0x67,
	0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x12, 0x28, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x65, 0x78,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x1a, 0x28, 0x0a, 0x02,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x72, 0x69, 0x64, 0x1a, 0x48, 0x0a, 0x0a, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x48, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74,
	0x1a, 0x90, 0x01, 0x0a, 0x09, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d,
	0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x73, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f,
	0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x01, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x1a, 0x7a, 0x0a, 0x03, 0x42, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x04,
	0x68, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x04, 0x68, 0x69, 0x73, 0x74, 0x1a,
	0xfd, 0x02, 0x0a, 0x03, 0x41, 0x67, 0x67, 0x12, 0x36, 0x0a, 0x03, 0x61, 0x67, 0x67, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x2e, 0x41, 0x67,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x02, 0x18, 0x01, 0x52, 0x03, 0x61, 0x67, 0x67, 0x12,
	0x4e, 0x0a, 0x0d, 0x61, 0x67, 0x67, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x2e,
	0x41, 0x67, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x61, 0x67, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x37,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x36, 0x0a, 0x08, 0x41, 0x67, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x5e, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3c, 0x0a, 0x0e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x45, 0x78,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x98, 0x02, 0x0a, 0x17, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x67, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x67, 0x67, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x04, 0x61, 0x67, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74,
	0x68, 0x44, 0x6f, 0x63, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x73,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x8a, 0x01, 0x0a, 0x1d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x73, 0x79, 0x6e, 0x63,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xc2,
	0x05, 0x0a, 0x1e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72,
	0x61, 0x63, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x66, 0x72, 0x61, 0x63, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x61,
	0x63, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x66, 0x72, 0x61, 0x63, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69,
	0x73, 0x6b, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x67, 0x67,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x67,
	0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x04, 0x61, 0x67, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x12,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x37, 0x0a,
	0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x64,
	0x6f, 0x63, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x44,
	0x6f, 0x63, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x22, 0x37, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x73, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x56, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x22, 0xa5, 0x05, 0x0a, 0x15, 0x41, 0x73, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x63, 0x73,
	0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x61,
	0x63, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x61, 0x63, 0x73, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x61,
	0x63, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x69, 0x73,
	0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x67, 0x67, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x67, 0x67, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x04, 0x61, 0x67, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2e,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x64, 0x6f, 0x63, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x44, 0x6f, 0x63, 0x73,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x22, 0x30, 0x0a, 0x0a, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69,
	0x6e, 0x74, 0x22, 0xfd, 0x01, 0x0a, 0x0c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12,
	0x35, 0x0a, 0x0e, 0x69, 0x64, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x68, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x69, 0x64, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x45, 0x0a, 0x0c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x2a, 0x91, 0x01, 0x0a, 0x07, 0x41, 0x67, 0x67, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x12,
	0x0a, 0x0e, 0x41, 0x47, 0x47, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x47, 0x47, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x5f, 0x53,
	0x55, 0x4d, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x47, 0x47, 0x5f, 0x46, 0x55, 0x4e, 0x43,
	0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x47, 0x47, 0x5f, 0x46, 0x55,
	0x4e, 0x43, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x47, 0x47, 0x5f,
	0x46, 0x55, 0x4e, 0x43, 0x5f, 0x41, 0x56, 0x47, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x47,
	0x47, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x5f, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x4c, 0x45, 0x10,
	0x05, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x47, 0x47, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x5f, 0x55, 0x4e,
	0x49, 0x51, 0x55, 0x45, 0x10, 0x06, 0x2a, 0x26, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x0a, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x2a, 0x78,
	0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12,
	0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x47, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x5f, 0x57, 0x41, 0x4e, 0x54, 0x53, 0x5f, 0x4f, 0x4c, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x55,
	0x4e, 0x49, 0x51, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x53, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x46, 0x52, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x5f, 0x48, 0x49, 0x54, 0x10, 0x03, 0x2a, 0x8a, 0x01, 0x0a, 0x11, 0x41, 0x73, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x1b, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12,
	0x19, 0x0a, 0x15, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x73,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x73, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x03, 0x32, 0x9c, 0x05, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41,
	0x70, 0x69, 0x12, 0x32, 0x0a, 0x04, 0x42, 0x75, 0x6c, 0x6b, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x10, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63,
	0x0a, 0x16, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x73, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f,
	0x0a, 0x05, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x7a, 0x6f, 0x6e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x73, 0x65, 0x71, 0x2d,
	0x64, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x61, 0x70, 0x69, 0x3b,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_storeapi_store_api_proto_rawDescOnce sync.Once
	file_storeapi_store_api_proto_rawDescData []byte
)

func file_storeapi_store_api_proto_rawDescGZIP() []byte {
	file_storeapi_store_api_proto_rawDescOnce.Do(func() {
		file_storeapi_store_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storeapi_store_api_proto_rawDesc), len(file_storeapi_store_api_proto_rawDesc)))
	})
	return file_storeapi_store_api_proto_rawDescData
}

var file_storeapi_store_api_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_storeapi_store_api_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_storeapi_store_api_proto_goTypes = []any{
	(AggFunc)(0),                           // 0: api.AggFunc
	(Order)(0),                             // 1: api.Order
	(SearchErrorCode)(0),                   // 2: api.SearchErrorCode
	(AsyncSearchStatus)(0),                 // 3: api.AsyncSearchStatus
	(*BulkRequest)(nil),                    // 4: api.BulkRequest
	(*BinaryData)(nil),                     // 5: api.BinaryData
	(*AggQuery)(nil),                       // 6: api.AggQuery
	(*SearchRequest)(nil),                  // 7: api.SearchRequest
	(*SearchResponse)(nil),                 // 8: api.SearchResponse
	(*ExplainEntry)(nil),                   // 9: api.ExplainEntry
	(*StartAsyncSearchRequest)(nil),        // 10: api.StartAsyncSearchRequest
	(*StartAsyncSearchResponse)(nil),       // 11: api.StartAsyncSearchResponse
	(*FetchAsyncSearchResultRequest)(nil),  // 12: api.FetchAsyncSearchResultRequest
	(*FetchAsyncSearchResultResponse)(nil), // 13: api.FetchAsyncSearchResultResponse
	(*CancelAsyncSearchRequest)(nil),       // 14: api.CancelAsyncSearchRequest
	(*CancelAsyncSearchResponse)(nil),      // 15: api.CancelAsyncSearchResponse
	(*DeleteAsyncSearchRequest)(nil),       // 16: api.DeleteAsyncSearchRequest
	(*DeleteAsyncSearchResponse)(nil),      // 17: api.DeleteAsyncSearchResponse
	(*GetAsyncSearchesListRequest)(nil),    // 18: api.GetAsyncSearchesListRequest
	(*GetAsyncSearchesListResponse)(nil),   // 19: api.GetAsyncSearchesListResponse
	(*AsyncSearchesListItem)(nil),          // 20: api.AsyncSearchesListItem
	(*IdWithHint)(nil),                     // 21: api.IdWithHint
	(*FetchRequest)(nil),                   // 22: api.FetchRequest
	(*StatusRequest)(nil),                  // 23: api.StatusRequest
	(*StatusResponse)(nil),                 // 24: api.StatusResponse
	(*SearchResponse_Id)(nil),              // 25: api.SearchResponse.Id
	(*SearchResponse_IdWithHint)(nil),      // 26: api.SearchResponse.IdWithHint
	(*SearchResponse_Histogram)(nil),       // 27: api.SearchResponse.Histogram
	(*SearchResponse_Bin)(nil),             // 28: api.SearchResponse.Bin
	(*SearchResponse_Agg)(nil),             // 29: api.SearchResponse.Agg
	nil,                                    // 30: api.SearchResponse.HistogramEntry
	nil,                                    // 31: api.SearchResponse.Agg.AggEntry
	nil,                                    // 32: api.SearchResponse.Agg.AggHistogramEntry
	(*FetchRequest_FieldsFilter)(nil),      // 33: api.FetchRequest.FieldsFilter
	(*durationpb.Duration)(nil),            // 34: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),          // 35: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                  // 36: google.protobuf.Empty
}
var file_storeapi_store_api_proto_depIdxs = []int32{
	0,  // 0: api.AggQuery.func:type_name -> api.AggFunc
	6,  // 1: api.SearchRequest.aggs:type_name -> api.AggQuery
	1,  // 2: api.SearchRequest.order:type_name -> api.Order
	26, // 3: api.SearchResponse.id_sources:type_name -> api.SearchResponse.IdWithHint
	30, // 4: api.SearchResponse.histogram:type_name -> api.SearchResponse.HistogramEntry
	29, // 5: api.SearchResponse.aggs:type_name -> api.SearchResponse.Agg
	2,  // 6: api.SearchResponse.code:type_name -> api.SearchErrorCode
	9,  // 7: api.SearchResponse.explain:type_name -> api.ExplainEntry
	34, // 8: api.ExplainEntry.duration:type_name -> google.protobuf.Duration
	9,  // 9: api.ExplainEntry.children:type_name -> api.ExplainEntry
	34, // 10: api.StartAsyncSearchRequest.retention:type_name -> google.protobuf.Duration
	6,  // 11: api.StartAsyncSearchRequest.aggs:type_name -> api.AggQuery
	1,  // 12: api.FetchAsyncSearchResultRequest.order:type_name -> api.Order
	3,  // 13: api.FetchAsyncSearchResultResponse.status:type_name -> api.AsyncSearchStatus
	8,  // 14: api.FetchAsyncSearchResultResponse.response:type_name -> api.SearchResponse
	35, // 15: api.FetchAsyncSearchResultResponse.started_at:type_name -> google.protobuf.Timestamp
	35, // 16: api.FetchAsyncSearchResultResponse.expires_at:type_name -> google.protobuf.Timestamp
	35, // 17: api.FetchAsyncSearchResultResponse.canceled_at:type_name -> google.protobuf.Timestamp
	6,  // 18: api.FetchAsyncSearchResultResponse.aggs:type_name -> api.AggQuery
	35, // 19: api.FetchAsyncSearchResultResponse.from:type_name -> google.protobuf.Timestamp
	35, // 20: api.FetchAsyncSearchResultResponse.to:type_name -> google.protobuf.Timestamp
	34, // 21: api.FetchAsyncSearchResultResponse.retention:type_name -> google.protobuf.Duration
	3,  // 22: api.GetAsyncSearchesListRequest.status:type_name -> api.AsyncSearchStatus
	20, // 23: api.GetAsyncSearchesListResponse.searches:type_name -> api.AsyncSearchesListItem
	3,  // 24: api.AsyncSearchesListItem.status:type_name -> api.AsyncSearchStatus
	35, // 25: api.AsyncSearchesListItem.started_at:type_name -> google.protobuf.Timestamp
	35, // 26: api.AsyncSearchesListItem.expires_at:type_name -> google.protobuf.Timestamp
	35, // 27: api.AsyncSearchesListItem.canceled_at:type_name -> google.protobuf.Timestamp
	6,  // 28: api.AsyncSearchesListItem.aggs:type_name -> api.AggQuery
	35, // 29: api.AsyncSearchesListItem.from:type_name -> google.protobuf.Timestamp
	35, // 30: api.AsyncSearchesListItem.to:type_name -> google.protobuf.Timestamp
	34, // 31: api.AsyncSearchesListItem.retention:type_name -> google.protobuf.Duration
	21, // 32: api.FetchRequest.ids_with_hints:type_name -> api.IdWithHint
	33, // 33: api.FetchRequest.fields_filter:type_name -> api.FetchRequest.FieldsFilter
	35, // 34: api.StatusResponse.oldest_time:type_name -> google.protobuf.Timestamp
	25, // 35: api.SearchResponse.IdWithHint.id:type_name -> api.SearchResponse.Id
	35, // 36: api.SearchResponse.Bin.ts:type_name -> google.protobuf.Timestamp
	27, // 37: api.SearchResponse.Bin.hist:type_name -> api.SearchResponse.Histogram
	31, // 38: api.SearchResponse.Agg.agg:type_name -> api.SearchResponse.Agg.AggEntry
	32, // 39: api.SearchResponse.Agg.agg_histogram:type_name -> api.SearchResponse.Agg.AggHistogramEntry
	28, // 40: api.SearchResponse.Agg.timeseries:type_name -> api.SearchResponse.Bin
	27, // 41: api.SearchResponse.Agg.AggHistogramEntry.value:type_name -> api.SearchResponse.Histogram
	4,  // 42: api.StoreApi.Bulk:input_type -> api.BulkRequest
	7,  // 43: api.StoreApi.Search:input_type -> api.SearchRequest
	10, // 44: api.StoreApi.StartAsyncSearch:input_type -> api.StartAsyncSearchRequest
	12, // 45: api.StoreApi.FetchAsyncSearchResult:input_type -> api.FetchAsyncSearchResultRequest
	14, // 46: api.StoreApi.CancelAsyncSearch:input_type -> api.CancelAsyncSearchRequest
	16, // 47: api.StoreApi.DeleteAsyncSearch:input_type -> api.DeleteAsyncSearchRequest
	18, // 48: api.StoreApi.GetAsyncSearchesList:input_type -> api.GetAsyncSearchesListRequest
	22, // 49: api.StoreApi.Fetch:input_type -> api.FetchRequest
	23, // 50: api.StoreApi.Status:input_type -> api.StatusRequest
	36, // 51: api.StoreApi.Bulk:output_type -> google.protobuf.Empty
	8,  // 52: api.StoreApi.Search:output_type -> api.SearchResponse
	11, // 53: api.StoreApi.StartAsyncSearch:output_type -> api.StartAsyncSearchResponse
	13, // 54: api.StoreApi.FetchAsyncSearchResult:output_type -> api.FetchAsyncSearchResultResponse
	15, // 55: api.StoreApi.CancelAsyncSearch:output_type -> api.CancelAsyncSearchResponse
	17, // 56: api.StoreApi.DeleteAsyncSearch:output_type -> api.DeleteAsyncSearchResponse
	19, // 57: api.StoreApi.GetAsyncSearchesList:output_type -> api.GetAsyncSearchesListResponse
	5,  // 58: api.StoreApi.Fetch:output_type -> api.BinaryData
	24, // 59: api.StoreApi.Status:output_type -> api.StatusResponse
	51, // [51:60] is the sub-list for method output_type
	42, // [42:51] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_storeapi_store_api_proto_init() }
func file_storeapi_store_api_proto_init() {
	if File_storeapi_store_api_proto != nil {
		return
	}
	file_storeapi_store_api_proto_msgTypes[4].OneofWrappers = []any{}
	file_storeapi_store_api_proto_msgTypes[9].OneofWrappers = []any{}
	file_storeapi_store_api_proto_msgTypes[14].OneofWrappers = []any{}
	file_storeapi_store_api_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storeapi_store_api_proto_rawDesc), len(file_storeapi_store_api_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storeapi_store_api_proto_goTypes,
		DependencyIndexes: file_storeapi_store_api_proto_depIdxs,
		EnumInfos:         file_storeapi_store_api_proto_enumTypes,
		MessageInfos:      file_storeapi_store_api_proto_msgTypes,
	}.Build()
	File_storeapi_store_api_proto = out.File
	file_storeapi_store_api_proto_goTypes = nil
	file_storeapi_store_api_proto_depIdxs = nil
}
